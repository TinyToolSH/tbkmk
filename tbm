#!/bin/bash

#This file is part of the TinyTools distribution (https://github.com/Calebe94/TinyTools).
#Copyright (C) 2021 TinyTools
#
#This program is free software: you can redistribute it and/or modify
#it under the terms of the GNU General Public License as published by
#the Free Software Foundation, either version 3 of the License, or
#(at your option) any later version.
#
#This program is distributed in the hope that it will be useful,
#but WITHOUT ANY WARRANTY; without even the implied warranty of
#MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#GNU General Public License for more details.
#
#You should have received a copy of the GNU General Public License
#along with this program.  If not, see <http://www.gnu.org/licenses/>.

url_regex='^(https?|ftp|file)://[-A-Za-z0-9\+&@#/%?=~_|!:,.;]*[-A-Za-z0-9\+&@#/%=~_|]$'
action=""
filter=""
url=""
list_by="tee" # tee is the default
id=0
delete_id=""
output_format="tee" # tee is the default
[ -z "$TBM_FILE" ] && TBM_FILE=/dev/stdout

usage()
{
    echo "usage: tbm {URL | OPTION}"
    echo "e.g: tbm http://web.link"
    echo "options:"
    echo "-l: lists bookmarks in \$TBM_FILE;"
    echo "-f: filter bookmarks by chosen word;"
    echo "-t: filter bookmarks by titles;"
    echo "-u: filter bookmarks by urls;"
    echo "-o: opens the \$TBM_FILE with your default text editor;"
    echo "-i: lists bookmarks by id;"
    echo "-h: shows this usage message."
}

create_bookmark()
{
    url="$1"
    title=$(curl -s "$url" | shup -r "title")
    printf "%s %s\n" "$url" "$title" | head -1
}

list_bookmarks()
{
    if [ $id -eq 1 ]; then
        cat -b "$TBM_FILE" | awk '{out=$1") "$2; for(i=3;i<=NF;i++){out=out" "$i}; print out}'
    else
        cat "$TBM_FILE"
    fi
}

list_by_title()
{
    if [ $id -eq 1 ]; then
        awk '{out=$1""; for(i=3; i<=NF; i++){out=out" "$i}; print out}'
    else
        awk '{$1=""; print $0}'
    fi
}

list_by_url()
{
    if [ $id -eq 1 ]; then
        awk '{print $1" "$2}'
    else
        awk '{print $1}'
    fi
}

delete_bookmark()
{
    id="$1"
    sed -i "$id d" "$TBM_FILE"
    echo "ok!"
}

to_md()
{
    awk -v id="$id" '{
        index_arg=2
        url=$1
        title=""
        if(id == 1)
        {
            title=$1" "
            index_arg=3
            url=$2
        }

        for(i=index_arg; i<=NF; i++)
        {
            title=title$i" "
        }
        printf "[%s]", title
        printf "(%s)", url
        printf "\n"
    }'
}

to_html()
{
    awk -v id="$id" '{
        index_arg=2
        title=""
        url=$1
        if(id == 1)
        {
            title=$1" "
            index_arg=3
            url=$2
        }
        for(i=index_arg; i<=NF; i++)
        {
            title=title$i" "
        }
        printf "<a href=\"%s\">", url
        printf "%s</a>", title
        printf "\n"
    }'
}

parse_arguments()
{
    while getopts ":hlf:tuoid:-:" args; do
        case "${args}" in
            l) action="list" ;;
            f) filter="${OPTARG}" ;;
            t) list_by=list_by_title ;;
            u) list_by=list_by_url ;;
            i) id=1; ;;
            o) xdg-open "$TBM_FILE"; exit 0;;
            d) delete_id="${OPTARG}"; action="delete" ;;
            h) usage; exit 0 ;;
            -)
                case ${OPTARG} in
                    "md"*) output_format=to_md ;;
                    "html"*) output_format=to_html ;;
                esac
                ;;
            *) usage; exit 1 ;;
        esac
    done

    shift $((OPTIND-1))

    if [ ! "$#" -eq 0 ] && [[ $* =~ $url_regex ]] && [ -z "$action" ]; then
        action="add"
        url="$*"
    fi
}

main()
{
    parse_arguments "$@"
    case "$action" in
        "list")
            if [ -z "$filter" ]; then
                list_bookmarks | ${list_by} | ${output_format}
            else
                list_bookmarks | ${list_by} | grep -i "$filter" | ${output_format}
            fi
            ;;
        "add")
            if [ "$TBM_FILE" != "/dev/stdout" ]; then
                create_bookmark "$url" | tee -a "$TBM_FILE" | ${output_format}
            else
                create_bookmark "$url" | ${output_format}
            fi
            ;;

        "delete")
            num_lines=$(wc -l "$TBM_FILE" | awk '{print $1}')

            if ! [[ $delete_id =~ ^[0-9]+$ ]] || [ "$delete_id" -gt "$num_lines" ] || [ "$delete_id" -eq 0 ]; then
                echo "invalid id!"
                exit 1
            fi

            delete_bookmark "$delete_id";;
    esac
}

[ -z "$TBM_FILE" ] && TBM_FILE=$HOME/.tbookmarks

if (($# == 0)); then
    list_bookmarks
    exit 0
fi

main "$@"
