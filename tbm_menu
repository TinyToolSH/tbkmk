#!/bin/sh

#This file is part of the TinyTools distribution (https://github.com/Calebe94/TinyTools).
#Copyright (C) 2021 TinyTools
#
#This program is free software: you can redistribute it and/or modify
#it under the terms of the GNU General Public License as published by
#the Free Software Foundation, either version 3 of the License, or
#(at your option) any later version.
#
#This program is distributed in the hope that it will be useful,
#but WITHOUT ANY WARRANTY; without even the implied warranty of
#MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#GNU General Public License for more details.
#
#You should have received a copy of the GNU General Public License
#along with this program.  If not, see <http://www.gnu.org/licenses/>.
#

####################################################################################################
# Variables
####################################################################################################
tbm=tbm
[ -z "$TBM_FILE" ] || [ "$TBM_FILE" = "/dev/stdout" ] && export TBM_FILE="$HOME/.tbookmarks"
menu_args=""
menu="-d"
####################################################################################################
# Functions
####################################################################################################
parse_arguments(){
    while getopts dfra: option
    do
        case "${option}" in
            d) menu='-d';;
            f) menu='-f';;
            r) menu='-r';;
            a) menu_args="${OPTARG}";;
            *) echo "menu not available"; exit 1 ;;
        esac
    done
}

display_menu(){
    printf '%s\n' "$1" | tmenu "$menu" -a "-p $2: $menu_args"
}

get_bookmark_url()
{
    $tbm -l | grep "$1" | awk '{print $1}'
}

get_bookmark_id()
{
    $tbm -li | grep "$1" | awk '{print $1}' | rev | cut -c 2- | rev
}

list_bookmarks_titles()
{
    $tbm -lt
}

bookmark_action()
{
    bookmark="$1"
    actions="[open]\n[copy]\n[delete]\n[back]\n[close]"
    selection=$(display_menu "$actions" "$bookmark")
    if [ -n "$selection" ]; then
        case "$selection" in
            "[open]")
                url=$(get_bookmark_url "$bookmark")
                [ -z "$url" ] && display_menu "No url given!" "Error" || xdg-open "$url"
                ;;
            "[copy]")
                url=$(get_bookmark_url "$bookmark")
                echo "$url" | xclip -selection clipboard
                ;;
            "[delete]")
                choice=$(display_menu "no\nyes" "Are you sure?")
                if [ "$choice" = "yes" ]; then
                    id=$(get_bookmark_id "$bookmark")
                    [ -z "$id" ] && display_menu "No id given!" "Error" || tbm -d "$id"
                else
                    bookmark_action "$bookmark"
                fi
                ;;
            "[back]") show_bookmarks ;;
            *) exit 0 ;;
        esac
    fi
}

show_bookmarks()
{
    actions="[new]\n[close]\n"
    bookmarks="$actions$(list_bookmarks_titles)"
    selection=$(display_menu "$bookmarks" "Bookmarks")
    if [ -n "$selection" ]; then
        case "$selection" in
        "[new]")
            status=$($tbm "$(xclip -o -selection clipboard)")
            [ -z "$status" ] && display_menu "No url on clipboard!" "Error" || echo "$status"
            ;;
        "[close]") exit 0 ;;
        *) bookmark_action "$selection" ;;
        esac
    fi
}
####################################################################################################
# Main
####################################################################################################
parse_arguments "$@"
show_bookmarks
